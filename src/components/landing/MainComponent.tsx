import { ReactNode } from "react";
import StepCard from "@/components/landing/StepCard";
import FeatureCard from "@/components/landing/FeatureCard.tsx";
import { ScatterChart, TableIcon, UsersRoundIcon } from "lucide-react";
import create_team from "@/assets/create.png";
import join_team from "@/assets/join_team.png";
import explore from "@/assets/explore.png";

interface Step {
  stepTitle: string;
  description: string;
  img: string;
}

interface Feature {
  title: string;
  description: string;
  icon: ReactNode;
}

const STEPS: Step[] = [
  {
    stepTitle: "Create a team",
    description:
      "Create a team on the Teams page. Just give it a name and you're good to go.",
    img: create_team,
  },
  {
    stepTitle: "Invite your mates",
    description:
      "Share the code of your team to your friends so they can join it.",
    img: join_team,
  },
  {
    stepTitle: "Explore",
    description:
      "Explore the tool and enjoy the features we've built for you. If you need help, you can read our Documentation or join us on Discord.",
    img: explore,
  },
];

const FEATURES: Feature[] = [
  {
    title: "Tracker",
    description:
      "Track your latest results easily with our easy-to-use interface. Stats and charts are automatically displayed for you so you can focus on your game.",
    icon: <TableIcon size={48} />,
  },
  {
    title: "Analysis",
    description:
      "Our brand new analysis tool allows you to analyze your games in depth. All you have to do is import the file generated by your game and we'll do the rest.",
    icon: <ScatterChart size={48} />,
  },
  {
    title: "Teams",
    description:
      "Exhausted to create a team by your own ? No worries, we got you covered. You can create a team and invite your mates to join it.",
    icon: <UsersRoundIcon size={48} />,
  },
];

interface Props<T extends Feature | Step> {
  title: string;
  description: string;
  data: T[];
  renderItem: (item: T & { key: number }) => ReactNode;
}

const StepSection = ({ title, description, data, renderItem }: Props<Step>) => (
  <div>
    <div className="flex flex-col items-center gap-2 w-full">
      <h2 className="text-4xl text-center font-bold">{title}</h2>
      <h3 className="opacity-60 text-center">{description}</h3>
    </div>
    <div className="grid grid-cols-1 justify-items-center gap-8 mt-8 lg:grid-cols-3 lg:content-center">
      {data.map((item: Step, index) => renderItem({ ...item, key: index }))}
    </div>
  </div>
);

const FeatureSection = ({
  title,
  description,
  data,
  renderItem,
}: Props<Feature>) => (
  <div>
    <div className="flex flex-col items-center gap-2 w-full">
      <h2 className="text-4xl text-center font-bold">{title}</h2>
      <h3 className="opacity-60 text-center">{description}</h3>
    </div>
    <div className="grid grid-cols-1 justify-items-center gap-8 mt-8 lg:grid-cols-3 lg:content-center">
      {data.map((item: Feature, index) => renderItem({ ...item, key: index }))}
    </div>
  </div>
);

const MainComponent = () => (
  <div className="flex flex-col gap-24">
    <StepSection
      title="3 steps"
      description="Only 3 steps to get started with our tool. It's easy and fast."
      data={STEPS}
      renderItem={(step: Step & { key: number }) => (
        <StepCard
          key={step.key}
          stepNumber={step.key + 1}
          stepTitle={step.stepTitle}
          description={step.description}
          img={step.img}
        />
      )}
    />

    <FeatureSection
      title="Main features"
      description="Here's a quick overview of our core features. Feel free to dive into our tool to explore our tool. If you need help or want new stuff, you can join our Discord."
      data={FEATURES}
      renderItem={(feature: Feature & { key: number }) => (
        <FeatureCard
          key={feature.key}
          title={feature.title}
          description={feature.description}
          icon={feature.icon}
        />
      )}
    />
  </div>
);

export default MainComponent;

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        listen [::]:80;

        server_name datastrike.cloud www.datastrike.cloud;
        server_tokens off;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://datastrike.cloud$request_uri;
        }
    }

    server {
        listen 443 default_server ssl http2;
        listen [::]:443 ssl http2;

        server_name datastrike.cloud;

        ssl_certificate /etc/nginx/ssl/live/datastrike.cloud/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/datastrike.cloud/privkey.pem;

        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            include mime.types;
        }

        location /assets {
            alias /usr/share/nginx/html/assets;
        }

        types {
            application/javascript js;
            application/json       json;
            text/css              css;
            image/svg+xml         svg svgz;
            text/plain            txt;
            application/xml       xml;
        }

        location /api {
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass http://datastrike-backend:3333;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /socket.io {
            proxy_pass http://datastrike-backend:3333;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
